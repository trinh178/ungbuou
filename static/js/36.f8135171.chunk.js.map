{"version":3,"file":"static/js/36.f8135171.chunk.js","mappings":"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","sources":["modules/@core/components/Layout/PageContent.tsx","modules/reception/components/PatientSTTCard.tsx","modules/reception/pages/reception-call-page.tsx","test/dummy-data/reception.ts","../node_modules/@mui/icons-material/DateRange.js","../node_modules/@mui/icons-material/Info.js","../node_modules/@mui/icons-material/SettingsBackupRestore.js","../node_modules/classnames/index.js"],"sourcesContent":["import { PropsWithChildren, forwardRef, useMemo } from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { SxProps, Theme } from '@mui/material/styles';\nimport classNames from 'classnames';\n\ninterface PageContentProps extends BoxProps {\n  fixed?: boolean;\n}\nexport default forwardRef<HTMLDivElement, PropsWithChildren<PageContentProps>>(\n  ({ children, fixed, ...props }, ref) => {\n    const sx: SxProps<Theme> | undefined = useMemo(\n      () =>\n        fixed\n          ? {\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              left: 0,\n              bottom: 0,\n              overflow: 'auto',\n              ...props.sx,\n            }\n          : props.sx,\n      [props.sx, fixed],\n    );\n\n    return (\n      <Box\n        ref={ref}\n        padding={2}\n        {...props}\n        sx={sx}\n        className={classNames('fade-in', props.className)}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n","import styled from '@emotion/styled';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport InfoIcon from '@mui/icons-material/Info';\nimport SettingsBackupRestoreIcon from '@mui/icons-material/SettingsBackupRestore';\nimport IconButton from '@mui/material/IconButton';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { ReceptionPatientModel } from 'services/reception';\n\nconst Card = styled.div`\n  color: #34458b;\n  background-color: #95c6fe25;\n  border-radius: 10px;\n  font-size: 1.6em;\n  margin: 4px;\n  align-items: center;\n  font-weight: bold;\n  padding: 8px 4px;\n  border: 1px solid #34458b;\n`;\nconst STT = styled.div`\n  text-align: center;\n`;\nconst Name = styled.div`\n  line-height: 0.8;\n  & > span {\n    font-size: 0.6em;\n    font-weight: normal;\n  }\n`;\nconst Action = styled.div`\n  display: flex;\n  flex-direction: flex-row;\n  justify-content: end;\n  align-items: center;\n  & button {\n    color: ${props => (props.color ? props.color : '#34458b')};\n  }\n`;\n\ninterface PatientSTTCardProps {\n  patient: ReceptionPatientModel;\n  color: string;\n  onRevert?: () => void;\n  onChange?: () => void;\n  onInfo?: () => void;\n  index: number;\n  animation?: boolean;\n}\nexport default function PatientSTTCard({\n  patient,\n  color,\n  onRevert = undefined,\n  onChange = undefined,\n  onInfo = undefined,\n  index,\n  animation,\n}: PatientSTTCardProps) {\n  return (\n    <Card\n      key={index}\n      className={classNames('row', {\n        'slide-in-left': animation && index === 0,\n        'slide-in-top': animation && index !== 0,\n      })}\n      style={{ color: color, borderColor: color }}\n    >\n      <STT className=\"col-2\">{patient.queue_number}</STT>\n      <Name className=\"col-8\">\n        {patient.fullname}\n        <br />\n        <span>\n          {patient.gender ? 'Nam' : 'Nữ'} /{' '}\n          {moment().diff(moment(patient.birthday), 'y')} tuổi / PK Hóa xạ trị /\n          Kiosk\n        </span>\n      </Name>\n      <Action className=\"col-2\" color={color}>\n        {onChange && (\n          <IconButton\n            className=\"float-right\"\n            onClick={() => (onChange ? onChange() : null)}\n            title=\"Đổi lịch khám\"\n          >\n            <DateRangeIcon />\n          </IconButton>\n        )}\n        {onRevert && (\n          <IconButton\n            className=\"float-right\"\n            onClick={() => (onRevert ? onRevert() : null)}\n            title=\"Chuyển về hàng chờ\"\n          >\n            <SettingsBackupRestoreIcon />\n          </IconButton>\n        )}\n        {onInfo && (\n          <IconButton\n            className=\"float-right\"\n            onClick={() => (onInfo ? onInfo() : null)}\n            title=\"Thông tin bệnh nhân\"\n          >\n            <InfoIcon />\n          </IconButton>\n        )}\n      </Action>\n    </Card>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport classNames from 'classnames';\nimport PatientSTTCard from '../components/PatientSTTCard';\nimport { useAppTheme } from 'app/theme';\nimport PageContent from 'modules/@core/components/Layout/PageContent';\nimport { ReceptionPatientModel } from 'services/reception';\nimport { receptionPatients } from 'test/dummy-data/reception';\n\n// Config\nconst CALL_TIMEOUT_SECOND = 3;\n\nexport default function ReceptionPage() {\n  const theme = useAppTheme();\n  // const waitingColor = theme.palette.primary.main;\n  const skippedColor = theme.palette.text.secondary;\n  const processedColor = theme.palette.primary.main;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const selectedRoom = {\n    name: 'Phòng tiếp nhận',\n    description: '',\n    code: '12',\n  };\n\n  const waitingPatientsRef = useRef([...receptionPatients]);\n  const [processedPatients, setProcessedPatients] = useState<\n    ReceptionPatientModel[]\n  >([]);\n  const [skippedPatients, setSkippedPatients] = useState<\n    ReceptionPatientModel[]\n  >([]);\n  const [currentPatient, setCurrentPatient] =\n    useState<ReceptionPatientModel | null>(null);\n\n  const [processedAnimation, setProcessedAnimation] = useState<boolean>(false);\n  const [skippedAnimation, setSkippedAnimation] = useState<boolean>(false);\n\n  // Interval\n  const [callTimeout, setCallTimeout] = useState<number>(0);\n  useEffect(() => {\n    if (callTimeout <= 0) return;\n    setTimeout(() => {\n      setCallTimeout(callTimeout - 1);\n    }, 1000);\n  }, [callTimeout]);\n  const call = () => {\n    if (currentPatient) {\n      setProcessedPatients([currentPatient, ...processedPatients]);\n    }\n    const patient = waitingPatientsRef.current.shift();\n    if (!patient) return;\n    setCurrentPatient(patient);\n    setCallTimeout(CALL_TIMEOUT_SECOND);\n\n    setProcessedAnimation(true);\n  };\n  const skip = () => {\n    if (currentPatient) {\n      setSkippedPatients([currentPatient, ...skippedPatients]);\n    }\n    const patient = waitingPatientsRef.current.shift();\n    if (!patient) return;\n    setCurrentPatient(patient);\n    setCallTimeout(CALL_TIMEOUT_SECOND);\n\n    setSkippedAnimation(true);\n  };\n\n  // Fake initial\n  useEffect(() => {\n    let patient: ReceptionPatientModel | null = null;\n    const processed: ReceptionPatientModel[] = [];\n    const skipped: ReceptionPatientModel[] = [];\n\n    for (let i = 0; i < 7; i++) {\n      patient = waitingPatientsRef.current.shift() || null;\n      if (!patient) break;\n      if (i % 2 === 0) {\n        processed.unshift(patient);\n      } else {\n        skipped.unshift(patient);\n      }\n    }\n\n    setProcessedPatients(processed);\n    setSkippedPatients(skipped);\n    patient = waitingPatientsRef.current.shift() || null;\n    setCurrentPatient(patient);\n  }, []);\n\n  return (\n    <PageContent fixed>\n      <Grid container spacing={1.5} height=\"100%\">\n        <Grid\n          item\n          xs={12}\n          md={6}\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={1.5}\n        >\n          <Box>\n            {/* <div className=\"w-100 position-relative\">\n                <RoomName className=\"text-center\">\n                  <b>\n                    {selectedRoom?.name\n                      ? selectedRoom?.name\n                      : selectedRoom.description + ' - ' + selectedRoom.code}\n                  </b>\n                </RoomName>\n              </div> */}\n            <div className=\"mt-0\">\n              <OrderNumber className=\"text-center m-0-auto p-0\">\n                <div>SỐ THỨ TỰ ĐANG TIẾP NHẬN</div>\n                <div className=\"number-wrapper\">\n                  <div\n                    className=\"number position-relative \"\n                    key={currentPatient?.queue_number}\n                  >\n                    <div\n                      className={classNames({\n                        'slide-in-top': processedAnimation || skippedAnimation,\n                      })}\n                    >\n                      {currentPatient?.queue_number || '-'}\n                    </div>\n                    {(processedAnimation || skippedAnimation) && (\n                      <div className=\"position-absolute top-0 bottom-0 start-0 end-0\">\n                        <div className=\"slide-out-bottom\">\n                          {currentPatient?.queue_number\n                            ? currentPatient.queue_number - 1\n                            : '-'}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* <div className=\"name\">\n                {currentPatient?.name || '-'}\n                <br />\n                <span className=\"extra\">\n                  {!_.isEmpty(currentPatient?.gender)\n                    ? currentPatient?.gender\n                    : '-'}\n                  {' / '}\n                  {currentPatient?.age || '-'} tuổi\n                </span>\n              </div> */}\n                </div>\n              </OrderNumber>\n            </div>\n            <Box textAlign=\"center\">\n              <Box\n                display=\"inline-flex\"\n                width={50}\n                height={50}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                borderRadius={2}\n                fontSize=\"1.4em\"\n                border=\"4px solid #666666\"\n              >\n                1\n              </Box>\n              <BtnCall\n                className=\"mt-2\"\n                onClick={skip}\n                disabled={callTimeout > 0 || currentPatient === null}\n                style={{\n                  background: skippedColor,\n                }}\n              >\n                QUA LƯỢT\n                {callTimeout > 0 ? ` (${callTimeout})` : ''}\n              </BtnCall>\n              <BtnCall\n                className=\"mt-2\"\n                onClick={call}\n                disabled={callTimeout > 0}\n                style={{\n                  background: processedColor,\n                }}\n              >\n                SỐ TIẾP THEO\n                {callTimeout > 0 ? ` (${callTimeout})` : ''}\n              </BtnCall>\n              <Box\n                display=\"inline-flex\"\n                width={50}\n                height={50}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                borderRadius={2}\n                fontSize=\"1.4em\"\n                border=\"4px solid #666666\"\n              >\n                2\n              </Box>\n            </Box>\n          </Box>\n          <PatientBoard\n            className=\"container-fluid m-0 p-0\"\n            color={skippedColor}\n          >\n            <div className=\"title\">\n              DANH SÁCH SỐ THỨ TỰ QUA LƯỢT CHƯA TIẾP NHẬN\n            </div>\n            <div className=\"patients-view\">\n              <div className=\"patients\">\n                {skippedPatients.map((p, i) => (\n                  <PatientSTTCard\n                    key={p.id}\n                    index={i}\n                    patient={p}\n                    color={skippedColor}\n                    onInfo={() => {\n                      // getPatientInfo(p.patient_id);\n                    }}\n                    animation={skippedAnimation}\n                  />\n                ))}\n                {skippedPatients.length === 0 && (\n                  <EmptyPatientCard color={skippedColor}>\n                    Danh sách trống\n                  </EmptyPatientCard>\n                )}\n              </div>\n            </div>\n          </PatientBoard>\n        </Grid>\n        <Grid item xs={12} md={6} display=\"flex\">\n          <PatientBoard\n            className=\"container-fluid m-0 p-0\"\n            color={processedColor}\n          >\n            <div className=\"title\">DANH SÁCH SỐ THỨ TỰ ĐANG TIẾP NHẬN</div>\n            <div className=\"patients-view\">\n              <div className=\"patients\">\n                {processedPatients.map((p, i) => (\n                  <PatientSTTCard\n                    key={p.id}\n                    index={i}\n                    patient={p}\n                    color={processedColor}\n                    onInfo={() => {\n                      // getPatientInfo(p.patient_id);\n                    }}\n                    animation={processedAnimation}\n                  />\n                ))}\n                {processedPatients.length === 0 && (\n                  <EmptyPatientCard color={processedColor}>\n                    Danh sách trống\n                  </EmptyPatientCard>\n                )}\n              </div>\n            </div>\n          </PatientBoard>\n        </Grid>\n      </Grid>\n    </PageContent>\n  );\n}\n\n// Styles\nconst OrderNumber = styled.div`\n  color: #d33933;\n  font-size: 1.5em;\n  & .number-wrapper {\n    background: #d33933;\n    display: inline-block;\n    color: white;\n    border-radius: 10px;\n    padding: 10px;\n    line-height: 1;\n    min-width: 130px;\n    box-shadow: rgba(9, 30, 66, 0.25) 0px 1px 1px,\n      rgba(9, 30, 66, 0.13) 0px 0px 1px 1px;\n  }\n  & .number {\n    font-size: 3em;\n    font-weight: bold;\n    overflow: hidden;\n  }\n  & .name {\n    margin-top: 4px;\n    font-size: 0.79em;\n    line-height: 1;\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n    & .extra {\n      font-size: 0.8em;\n      font-style: italic;\n      font-weight: normal;\n    }\n  }\n`;\nconst PatientBoard = styled.div<{ color: string }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  & .title {\n    border: 1px solid ${props => props.color};\n    border-radius: 10px 10px 0 0;\n    background: ${props => props.color};\n    text-align: center;\n    font-weight: bold;\n    font-size: 1em;\n    color: white;\n    padding: 4px;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n  & .patients-view {\n    flex: 1;\n    position: relative;\n    overflow: auto;\n    border: 1px solid ${props => props.color};\n    border-radius: 0 0 10px 10px;\n    ::-webkit-scrollbar-thumb {\n      background-color: ${props => props.color};\n    }\n    overflow-x: hidden;\n    & .patients {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n`;\nconst BtnCall = styled.button`\n  cursor: pointer;\n  background: #d33933;\n  border-radius: 10px;\n  padding: 4px 10px;\n  font-weight: bold;\n  color: white;\n  font-size: 1.2em;\n  width: 200px;\n  margin-left: 5px;\n  margin-right: 5px;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n  &:disabled {\n    cursor: not-allowed;\n    background: gray;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst EmptyPatientCard = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${props => props.color || '#34458b'};\n  height: 71px;\n`;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst RoomName = styled.div`\n  font-family: 'Times New Roman', Times, serif;\n  color: rgb(52, 69, 139);\n  font-size: 30px;\n  line-height: 1.2;\n  text-align: center;\n`;\n","import { ReceptionPatientModel } from 'services/reception';\n\nfunction makeid(length) {\n  let result = '';\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n}\n\nexport const receptionPatients: ReceptionPatientModel[] = Array(100)\n  .fill(0)\n  .map((_, i) => ({\n    id: `id-${i}`,\n    patient_code: (10000000 + i).toString(),\n    reception_code: (20000000 + i).toString(),\n    fullname: 'Nguyện Thị ' + makeid(5),\n    gender: 'Nữ',\n    birthday: '1985',\n    phone: '0901111159',\n    bhyt: {\n      code: 'FA1012311312322',\n      start_date: '01-01-2000',\n      end_date: '01-01-2010',\n    },\n    queue_number: i + 1,\n    room: 'Phỏng hóa trị',\n    register_from: 'Kiosk',\n    has_profile: true,\n    has_payment: true,\n  }));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\"\n}), 'DateRange');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 12c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm-2-9c-4.97 0-9 4.03-9 9H0l4 4 4-4H5c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.51 0-2.91-.49-4.06-1.3l-1.42 1.44C8.04 20.3 9.94 21 12 21c4.97 0 9-4.03 9-9s-4.03-9-9-9z\"\n}), 'SettingsBackupRestore');\nexports.default = _default;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["forwardRef","_ref","ref","children","fixed","props","_objectWithoutProperties","_excluded","sx","useMemo","_objectSpread","position","top","right","left","bottom","overflow","_jsx","Box","padding","className","classNames","Card","styled","_templateObject","_taggedTemplateLiteral","STT","_templateObject2","Name","_templateObject3","Action","_templateObject4","color","PatientSTTCard","patient","_ref$onRevert","onRevert","undefined","_ref$onChange","onChange","_ref$onInfo","onInfo","index","animation","_jsxs","style","borderColor","queue_number","fullname","gender","moment","diff","birthday","IconButton","onClick","title","DateRangeIcon","SettingsBackupRestoreIcon","InfoIcon","CALL_TIMEOUT_SECOND","ReceptionPage","theme","useAppTheme","skippedColor","palette","text","secondary","processedColor","primary","main","waitingPatientsRef","useRef","_toConsumableArray","receptionPatients","_useState","useState","_useState2","_slicedToArray","processedPatients","setProcessedPatients","_useState3","_useState4","skippedPatients","setSkippedPatients","_useState5","_useState6","currentPatient","setCurrentPatient","_useState7","_useState8","processedAnimation","setProcessedAnimation","_useState9","_useState10","skippedAnimation","setSkippedAnimation","_useState11","_useState12","callTimeout","setCallTimeout","useEffect","setTimeout","processed","skipped","i","current","shift","unshift","PageContent","Grid","container","spacing","height","item","xs","md","display","flexDirection","gap","OrderNumber","textAlign","width","justifyContent","alignItems","borderRadius","fontSize","border","BtnCall","concat","disabled","background","PatientBoard","map","p","id","length","EmptyPatientCard","_templateObject5","makeid","result","characters","charactersLength","counter","charAt","Math","floor","random","Array","fill","_","patient_code","toString","reception_code","phone","bhyt","code","start_date","end_date","room","register_from","has_profile","has_payment","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","hasOwn","hasOwnProperty","classes","arguments","arg","argType","push","isArray","inner","apply","Object","prototype","includes","key","call","join","module"],"sourceRoot":""}